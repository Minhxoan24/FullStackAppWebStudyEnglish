{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import{AuthAPI,TokenManager}from\"../services/api\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[isLoggedIn,setIsLoggedIn]=useState(false);const[isGuest,setIsGuest]=useState(false);const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Initialize auth state from tokens\nuseEffect(()=>{const initializeAuth=async()=>{setLoading(true);try{const accessToken=TokenManager.getAccessToken();const storedUser=localStorage.getItem('user');if(accessToken&&!TokenManager.isTokenExpired(accessToken)&&storedUser){// Token exists and is valid, get fresh profile data\nconst profileResult=await AuthAPI.getProfile();if(profileResult.success){setUser(profileResult.data);setIsLoggedIn(true);localStorage.setItem('user',JSON.stringify(profileResult.data));}else{// Token might be invalid, clear everything\nTokenManager.clearTokens();setUser(null);setIsLoggedIn(false);}}else{// No valid token, check for guest mode\nconst storedGuest=localStorage.getItem('isGuest');if(storedGuest==='true'){setIsGuest(true);}}}catch(error){console.error('Auth initialization error:',error);TokenManager.clearTokens();setUser(null);setIsLoggedIn(false);}finally{setLoading(false);}};initializeAuth();},[]);const clearError=()=>setError(null);const login=async credentials=>{try{clearError();if(!credentials||!credentials.email||!credentials.password){throw new Error('Vui lòng điền đầy đủ email và mật khẩu');}const result=await AuthAPI.login(credentials);if(result.success){setIsLoggedIn(true);setIsGuest(false);setUser(result.data.user);localStorage.removeItem('isGuest');return{success:true,user:result.data.user};}else{throw new Error(result.error||'Đăng nhập thất bại');}}catch(err){const errorMessage=err.message||'Có lỗi xảy ra khi đăng nhập';setError(errorMessage);return{success:false,error:errorMessage};}};const logout=()=>{try{clearError();AuthAPI.logout();// This clears tokens\nsetIsLoggedIn(false);setIsGuest(false);setUser(null);localStorage.removeItem('isGuest');return{success:true};}catch(err){console.error('Error during logout:',err);setError('Có lỗi khi đăng xuất');return{success:false,error:'Có lỗi khi đăng xuất'};}};const enterAsGuest=()=>{try{clearError();setIsGuest(true);setIsLoggedIn(false);setUser(null);localStorage.setItem('isGuest','true');localStorage.removeItem('isLoggedIn');localStorage.removeItem('user');return{success:true};}catch(err){console.error('Error entering as guest:',err);setError('Có lỗi khi vào chế độ khách');return{success:false,error:'Có lỗi khi vào chế độ khách'};}};const register=async userData=>{try{clearError();// Validation\nif(!userData||!userData.email||!userData.password||!userData.firstName||!userData.lastName){throw new Error('Vui lòng điền đầy đủ thông tin');}if(userData.password.length<6){throw new Error('Mật khẩu phải có ít nhất 6 ký tự');}const emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(!emailRegex.test(userData.email)){throw new Error('Email không hợp lệ');}const result=await AuthAPI.register(userData);if(result.success){return{success:true,message:'Đăng ký thành công! Vui lòng đăng nhập.'};}else{throw new Error(result.error||'Đăng ký thất bại');}}catch(err){const errorMessage=err.message||'Có lỗi xảy ra khi đăng ký';setError(errorMessage);return{success:false,error:errorMessage};}};const updateProfile=async updateData=>{try{clearError();// Validation\nif(!updateData||!updateData.firstName||!updateData.lastName){throw new Error('Vui lòng điền đầy đủ thông tin');}// Handle password change separately if provided\nif(updateData.password&&updateData.currentPassword){const passwordResult=await AuthAPI.changePassword({currentPassword:updateData.currentPassword,newPassword:updateData.password});if(!passwordResult.success){throw new Error(passwordResult.error||'Không thể đổi mật khẩu');}}// Update profile information\nconst result=await AuthAPI.updateProfile(updateData);if(result.success){setUser(result.data);return{success:true};}else{throw new Error(result.error||'Cập nhật thất bại');}}catch(err){const errorMessage=err.message||'Có lỗi xảy ra khi cập nhật thông tin';setError(errorMessage);return{success:false,error:errorMessage};}};const sendPasswordResetEmail=async email=>{try{clearError();if(!email){throw new Error('Vui lòng nhập email');}const emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(!emailRegex.test(email)){throw new Error('Email không hợp lệ');}const result=await AuthAPI.forgotPassword(email);return result;}catch(err){const errorMessage=err.message||'Có lỗi xảy ra khi gửi email';setError(errorMessage);return{success:false,error:errorMessage};}};const validateResetToken=async(token,email)=>{try{clearError();if(!token||!email){throw new Error('Token hoặc email không hợp lệ');}// For now, we'll just return success\n// Backend will validate when actually resetting password\nreturn{success:true};}catch(err){const errorMessage=err.message||'Token không hợp lệ';setError(errorMessage);return{success:false,error:errorMessage};}};const resetPassword=async _ref2=>{let{token,email,newPassword}=_ref2;try{clearError();if(!token||!email||!newPassword){throw new Error('Thiếu thông tin cần thiết');}if(newPassword.length<6){throw new Error('Mật khẩu phải có ít nhất 6 ký tự');}const result=await AuthAPI.resetPassword({token,newPassword});return result;}catch(err){const errorMessage=err.message||'Có lỗi xảy ra khi đặt lại mật khẩu';setError(errorMessage);return{success:false,error:errorMessage};}};const value={isLoggedIn,isGuest,user,loading,error,login,logout,register,enterAsGuest,updateProfile,sendPasswordResetEmail,validateResetToken,resetPassword,clearError};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AuthAPI","TokenManager","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","isLoggedIn","setIsLoggedIn","isGuest","setIsGuest","user","setUser","loading","setLoading","error","setError","initializeAuth","accessToken","getAccessToken","storedUser","localStorage","getItem","isTokenExpired","profileResult","getProfile","success","data","setItem","JSON","stringify","clearTokens","storedGuest","console","clearError","login","credentials","email","password","result","removeItem","err","errorMessage","message","logout","enterAsGuest","register","userData","firstName","lastName","length","emailRegex","test","updateProfile","updateData","currentPassword","passwordResult","changePassword","newPassword","sendPasswordResetEmail","forgotPassword","validateResetToken","token","resetPassword","_ref2","value","Provider"],"sources":["C:/Users/Admin/Desktop/demo app english/FullStackAppWebStudyEnglish/Frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { AuthAPI, TokenManager } from \"../services/api\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isGuest, setIsGuest] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Initialize auth state from tokens\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      setLoading(true);\r\n      \r\n      try {\r\n        const accessToken = TokenManager.getAccessToken();\r\n        const storedUser = localStorage.getItem('user');\r\n        \r\n        if (accessToken && !TokenManager.isTokenExpired(accessToken) && storedUser) {\r\n          // Token exists and is valid, get fresh profile data\r\n          const profileResult = await AuthAPI.getProfile();\r\n          \r\n          if (profileResult.success) {\r\n            setUser(profileResult.data);\r\n            setIsLoggedIn(true);\r\n            localStorage.setItem('user', JSON.stringify(profileResult.data));\r\n          } else {\r\n            // Token might be invalid, clear everything\r\n            TokenManager.clearTokens();\r\n            setUser(null);\r\n            setIsLoggedIn(false);\r\n          }\r\n        } else {\r\n          // No valid token, check for guest mode\r\n          const storedGuest = localStorage.getItem('isGuest');\r\n          if (storedGuest === 'true') {\r\n            setIsGuest(true);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth initialization error:', error);\r\n        TokenManager.clearTokens();\r\n        setUser(null);\r\n        setIsLoggedIn(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const clearError = () => setError(null);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      clearError();\r\n      \r\n      if (!credentials || !credentials.email || !credentials.password) {\r\n        throw new Error('Vui lòng điền đầy đủ email và mật khẩu');\r\n      }\r\n\r\n      const result = await AuthAPI.login(credentials);\r\n      \r\n      if (result.success) {\r\n        setIsLoggedIn(true);\r\n        setIsGuest(false);\r\n        setUser(result.data.user);\r\n        localStorage.removeItem('isGuest');\r\n        return { success: true, user: result.data.user };\r\n      } else {\r\n        throw new Error(result.error || 'Đăng nhập thất bại');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err.message || 'Có lỗi xảy ra khi đăng nhập';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    try {\r\n      clearError();\r\n      AuthAPI.logout(); // This clears tokens\r\n      setIsLoggedIn(false);\r\n      setIsGuest(false);\r\n      setUser(null);\r\n      localStorage.removeItem('isGuest');\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      console.error('Error during logout:', err);\r\n      setError('Có lỗi khi đăng xuất');\r\n      return { success: false, error: 'Có lỗi khi đăng xuất' };\r\n    }\r\n  };\r\n\r\n  const enterAsGuest = () => {\r\n    try {\r\n      clearError();\r\n      setIsGuest(true);\r\n      setIsLoggedIn(false);\r\n      setUser(null);\r\n      localStorage.setItem('isGuest', 'true');\r\n      localStorage.removeItem('isLoggedIn');\r\n      localStorage.removeItem('user');\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      console.error('Error entering as guest:', err);\r\n      setError('Có lỗi khi vào chế độ khách');\r\n      return { success: false, error: 'Có lỗi khi vào chế độ khách' };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      clearError();\r\n      \r\n      // Validation\r\n      if (!userData || !userData.email || !userData.password || !userData.firstName || !userData.lastName) {\r\n        throw new Error('Vui lòng điền đầy đủ thông tin');\r\n      }\r\n\r\n      if (userData.password.length < 6) {\r\n        throw new Error('Mật khẩu phải có ít nhất 6 ký tự');\r\n      }\r\n\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(userData.email)) {\r\n        throw new Error('Email không hợp lệ');\r\n      }\r\n\r\n      const result = await AuthAPI.register(userData);\r\n      \r\n      if (result.success) {\r\n        return { success: true, message: 'Đăng ký thành công! Vui lòng đăng nhập.' };\r\n      } else {\r\n        throw new Error(result.error || 'Đăng ký thất bại');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err.message || 'Có lỗi xảy ra khi đăng ký';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (updateData) => {\r\n    try {\r\n      clearError();\r\n      \r\n      // Validation\r\n      if (!updateData || !updateData.firstName || !updateData.lastName) {\r\n        throw new Error('Vui lòng điền đầy đủ thông tin');\r\n      }\r\n\r\n      // Handle password change separately if provided\r\n      if (updateData.password && updateData.currentPassword) {\r\n        const passwordResult = await AuthAPI.changePassword({\r\n          currentPassword: updateData.currentPassword,\r\n          newPassword: updateData.password\r\n        });\r\n        \r\n        if (!passwordResult.success) {\r\n          throw new Error(passwordResult.error || 'Không thể đổi mật khẩu');\r\n        }\r\n      }\r\n\r\n      // Update profile information\r\n      const result = await AuthAPI.updateProfile(updateData);\r\n      \r\n      if (result.success) {\r\n        setUser(result.data);\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(result.error || 'Cập nhật thất bại');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err.message || 'Có lỗi xảy ra khi cập nhật thông tin';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const sendPasswordResetEmail = async (email) => {\r\n    try {\r\n      clearError();\r\n      \r\n      if (!email) {\r\n        throw new Error('Vui lòng nhập email');\r\n      }\r\n\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(email)) {\r\n        throw new Error('Email không hợp lệ');\r\n      }\r\n\r\n      const result = await AuthAPI.forgotPassword(email);\r\n      return result;\r\n    } catch (err) {\r\n      const errorMessage = err.message || 'Có lỗi xảy ra khi gửi email';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const validateResetToken = async (token, email) => {\r\n    try {\r\n      clearError();\r\n      \r\n      if (!token || !email) {\r\n        throw new Error('Token hoặc email không hợp lệ');\r\n      }\r\n\r\n      // For now, we'll just return success\r\n      // Backend will validate when actually resetting password\r\n      return { success: true };\r\n    } catch (err) {\r\n      const errorMessage = err.message || 'Token không hợp lệ';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const resetPassword = async ({ token, email, newPassword }) => {\r\n    try {\r\n      clearError();\r\n      \r\n      if (!token || !email || !newPassword) {\r\n        throw new Error('Thiếu thông tin cần thiết');\r\n      }\r\n\r\n      if (newPassword.length < 6) {\r\n        throw new Error('Mật khẩu phải có ít nhất 6 ký tự');\r\n      }\r\n\r\n      const result = await AuthAPI.resetPassword({\r\n        token,\r\n        newPassword\r\n      });\r\n\r\n      return result;\r\n    } catch (err) {\r\n      const errorMessage = err.message || 'Có lỗi xảy ra khi đặt lại mật khẩu';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    isLoggedIn,\r\n    isGuest,\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    register,\r\n    enterAsGuest,\r\n    updateProfile,\r\n    sendPasswordResetEmail,\r\n    validateResetToken,\r\n    resetPassword,\r\n    clearError\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}