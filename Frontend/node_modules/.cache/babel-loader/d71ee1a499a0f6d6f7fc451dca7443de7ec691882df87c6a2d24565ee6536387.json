{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\APP English\\\\FullStackWebStudyEnglish\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isGuest, setIsGuest] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load auth state from localStorage on app start\n  useEffect(() => {\n    try {\n      const storedAuth = localStorage.getItem('isLoggedIn');\n      const storedUser = localStorage.getItem('user');\n      const storedGuest = localStorage.getItem('isGuest');\n      if (storedAuth === 'true' && storedUser) {\n        const userData = JSON.parse(storedUser);\n        setIsLoggedIn(true);\n        setUser(userData);\n      } else if (storedGuest === 'true') {\n        setIsGuest(true);\n      }\n    } catch (err) {\n      console.error('Error loading auth state:', err);\n      setError('Có lỗi khi tải thông tin đăng nhập');\n      // Clear potentially corrupted data\n      localStorage.removeItem('isLoggedIn');\n      localStorage.removeItem('user');\n      localStorage.removeItem('isGuest');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const clearError = () => setError(null);\n  const login = userData => {\n    try {\n      clearError();\n      if (!userData || !userData.email) {\n        throw new Error('Thông tin đăng nhập không hợp lệ');\n      }\n      setIsLoggedIn(true);\n      setIsGuest(false);\n      setUser(userData);\n      localStorage.setItem('isLoggedIn', 'true');\n      localStorage.setItem('user', JSON.stringify(userData));\n      localStorage.removeItem('isGuest');\n      return {\n        success: true\n      };\n    } catch (err) {\n      const errorMessage = err.message || 'Có lỗi xảy ra khi đăng nhập';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    try {\n      clearError();\n      setIsLoggedIn(false);\n      setIsGuest(false);\n      setUser(null);\n      localStorage.removeItem('isLoggedIn');\n      localStorage.removeItem('user');\n      localStorage.removeItem('isGuest');\n      return {\n        success: true\n      };\n    } catch (err) {\n      console.error('Error during logout:', err);\n      setError('Có lỗi khi đăng xuất');\n      return {\n        success: false,\n        error: 'Có lỗi khi đăng xuất'\n      };\n    }\n  };\n  const enterAsGuest = () => {\n    try {\n      clearError();\n      setIsGuest(true);\n      setIsLoggedIn(false);\n      setUser(null);\n      localStorage.setItem('isGuest', 'true');\n      localStorage.removeItem('isLoggedIn');\n      localStorage.removeItem('user');\n      return {\n        success: true\n      };\n    } catch (err) {\n      console.error('Error entering as guest:', err);\n      setError('Có lỗi khi vào chế độ khách');\n      return {\n        success: false,\n        error: 'Có lỗi khi vào chế độ khách'\n      };\n    }\n  };\n  const register = userData => {\n    try {\n      clearError();\n\n      // Validation\n      if (!userData || !userData.email || !userData.password || !userData.name) {\n        throw new Error('Vui lòng điền đầy đủ thông tin');\n      }\n      if (userData.password.length < 6) {\n        throw new Error('Mật khẩu phải có ít nhất 6 ký tự');\n      }\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(userData.email)) {\n        throw new Error('Email không hợp lệ');\n      }\n\n      // Check if user already exists\n      const existingUser = localStorage.getItem('registeredUser');\n      if (existingUser) {\n        const existing = JSON.parse(existingUser);\n        if (existing.email === userData.email) {\n          throw new Error('Email này đã được đăng ký');\n        }\n      }\n\n      // Save user data for future login\n      localStorage.setItem('registeredUser', JSON.stringify(userData));\n      return {\n        success: true\n      };\n    } catch (err) {\n      const errorMessage = err.message || 'Có lỗi xảy ra khi đăng ký';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const validateLogin = (email, password) => {\n    try {\n      clearError();\n      if (!email || !password) {\n        throw new Error('Vui lòng điền đầy đủ email và mật khẩu');\n      }\n\n      // Check if user exists (from registration)\n      const registeredUser = localStorage.getItem('registeredUser');\n      if (!registeredUser) {\n        throw new Error('Tài khoản không tồn tại. Vui lòng đăng ký trước!');\n      }\n      const user = JSON.parse(registeredUser);\n\n      // Simple validation\n      if (email !== user.email || password !== user.password) {\n        throw new Error('Email hoặc mật khẩu không đúng!');\n      }\n      return {\n        success: true,\n        user\n      };\n    } catch (err) {\n      const errorMessage = err.message || 'Có lỗi xảy ra khi xác thực';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const value = {\n    isLoggedIn,\n    isGuest,\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    register,\n    enterAsGuest,\n    validateLogin,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"D2jbGJyHzHJPtE7NU2U8XBOIDp4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isLoggedIn","setIsLoggedIn","isGuest","setIsGuest","user","setUser","loading","setLoading","error","setError","storedAuth","localStorage","getItem","storedUser","storedGuest","userData","JSON","parse","err","console","removeItem","clearError","login","email","setItem","stringify","success","errorMessage","message","logout","enterAsGuest","register","password","name","length","emailRegex","test","existingUser","existing","validateLogin","registeredUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/APP English/FullStackWebStudyEnglish/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isGuest, setIsGuest] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load auth state from localStorage on app start\r\n  useEffect(() => {\r\n    try {\r\n      const storedAuth = localStorage.getItem('isLoggedIn');\r\n      const storedUser = localStorage.getItem('user');\r\n      const storedGuest = localStorage.getItem('isGuest');\r\n      \r\n      if (storedAuth === 'true' && storedUser) {\r\n        const userData = JSON.parse(storedUser);\r\n        setIsLoggedIn(true);\r\n        setUser(userData);\r\n      } else if (storedGuest === 'true') {\r\n        setIsGuest(true);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error loading auth state:', err);\r\n      setError('Có lỗi khi tải thông tin đăng nhập');\r\n      // Clear potentially corrupted data\r\n      localStorage.removeItem('isLoggedIn');\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('isGuest');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const clearError = () => setError(null);\r\n\r\n  const login = (userData) => {\r\n    try {\r\n      clearError();\r\n      \r\n      if (!userData || !userData.email) {\r\n        throw new Error('Thông tin đăng nhập không hợp lệ');\r\n      }\r\n\r\n      setIsLoggedIn(true);\r\n      setIsGuest(false);\r\n      setUser(userData);\r\n      localStorage.setItem('isLoggedIn', 'true');\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      localStorage.removeItem('isGuest');\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      const errorMessage = err.message || 'Có lỗi xảy ra khi đăng nhập';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    try {\r\n      clearError();\r\n      setIsLoggedIn(false);\r\n      setIsGuest(false);\r\n      setUser(null);\r\n      localStorage.removeItem('isLoggedIn');\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('isGuest');\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      console.error('Error during logout:', err);\r\n      setError('Có lỗi khi đăng xuất');\r\n      return { success: false, error: 'Có lỗi khi đăng xuất' };\r\n    }\r\n  };\r\n\r\n  const enterAsGuest = () => {\r\n    try {\r\n      clearError();\r\n      setIsGuest(true);\r\n      setIsLoggedIn(false);\r\n      setUser(null);\r\n      localStorage.setItem('isGuest', 'true');\r\n      localStorage.removeItem('isLoggedIn');\r\n      localStorage.removeItem('user');\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      console.error('Error entering as guest:', err);\r\n      setError('Có lỗi khi vào chế độ khách');\r\n      return { success: false, error: 'Có lỗi khi vào chế độ khách' };\r\n    }\r\n  };\r\n\r\n  const register = (userData) => {\r\n    try {\r\n      clearError();\r\n      \r\n      // Validation\r\n      if (!userData || !userData.email || !userData.password || !userData.name) {\r\n        throw new Error('Vui lòng điền đầy đủ thông tin');\r\n      }\r\n\r\n      if (userData.password.length < 6) {\r\n        throw new Error('Mật khẩu phải có ít nhất 6 ký tự');\r\n      }\r\n\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(userData.email)) {\r\n        throw new Error('Email không hợp lệ');\r\n      }\r\n\r\n      // Check if user already exists\r\n      const existingUser = localStorage.getItem('registeredUser');\r\n      if (existingUser) {\r\n        const existing = JSON.parse(existingUser);\r\n        if (existing.email === userData.email) {\r\n          throw new Error('Email này đã được đăng ký');\r\n        }\r\n      }\r\n\r\n      // Save user data for future login\r\n      localStorage.setItem('registeredUser', JSON.stringify(userData));\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      const errorMessage = err.message || 'Có lỗi xảy ra khi đăng ký';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const validateLogin = (email, password) => {\r\n    try {\r\n      clearError();\r\n      \r\n      if (!email || !password) {\r\n        throw new Error('Vui lòng điền đầy đủ email và mật khẩu');\r\n      }\r\n\r\n      // Check if user exists (from registration)\r\n      const registeredUser = localStorage.getItem('registeredUser');\r\n      \r\n      if (!registeredUser) {\r\n        throw new Error('Tài khoản không tồn tại. Vui lòng đăng ký trước!');\r\n      }\r\n\r\n      const user = JSON.parse(registeredUser);\r\n      \r\n      // Simple validation\r\n      if (email !== user.email || password !== user.password) {\r\n        throw new Error('Email hoặc mật khẩu không đúng!');\r\n      }\r\n\r\n      return { success: true, user };\r\n    } catch (err) {\r\n      const errorMessage = err.message || 'Có lỗi xảy ra khi xác thực';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    isLoggedIn,\r\n    isGuest,\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    register,\r\n    enterAsGuest,\r\n    validateLogin,\r\n    clearError\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}